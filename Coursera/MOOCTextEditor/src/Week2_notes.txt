Data Structures and Performance - Week 2 Notes

Flesch score: measure of readability
calculation: 206.835 - 1.015 * (#words/#sentences) - 84.6 * (#syllables / #words)

String example = new String("example string") creates new String Object
String example = "example string") creates an Interned string

String comparison:
text.equals(text1)	->	compares characters in the string
text == text1	->	compares if it points to the same String Object, not the value of the object.

split(String string) returns an Array of substrings on the basis of spaces between the words
split(String regex)
 
Regular expressions: 
-	Repetition:		use + sign for one or more occurrences (like space)	->	(" +")
					use * sign for zero or more occurrences -> ("it*") matches i, it, itt, ittt etc.
-	Concatenation:	combining two or more regexs ->	("it")
-	Concatenation and Repetition:	a combination of both of the above ->	("it+")
-	Alternation:	AND or OR choice, use | between two regexs-> ("at|st") means both at and st will be matched
					Character Classes match each character between the brackets -> ("[1, 2, 3]") matches 1 and 2 and 3
					They can also be used to match a range with the - sign -> ("[1 - 3]") matches 1 and 2 and 3
					[0-9]+ matches any positive integer 
					Use ^ to exclude characters -> [^1-3z] excludes 1, 2 and 3 as well as z
					
Cheat sheet
[abc] 	Find one character from the options between the brackets
[^abc] 	Find one character NOT between the brackets
[0-9] 	Find one character from the range 0 to 9
| 		Find a match for any one of the patterns separated by | as in: cat|dog|fish
. 		Find just one instance of any character
^ 		Finds a match as the beginning of a string as in: ^Hello
$ 		Finds a match at the end of the string as in: World$
\d 		Find a digit
\s 		Find a whitespace character
\b 		Find a match at the beginning of a word like this: \bWORD, or at the end of a word like this: WORD\b
\uxxxx 	Find the Unicode character specified by the hexadecimal number xxxx
n+ 		Matches any string that contains at least one n
n* 		Matches any string that contains zero or more occurrences of n
n? 		Matches any string that contains zero or one occurrences of n
n{x} 	Matches any string that contains a sequence of X n's
n{x,y} 	Matches any string that contains a sequence of X to Y n's
n{x,} 	Matches any string that contains a sequence of at least X n's